import json,os,collections

this_dir = os.path.dirname(__file__)

# intro
test_sprites = [0x3A,0x28,0x9D,0xC1,0x00,0x00,0x00,0x38,0x1E,0x08,0x90,0xC1,0x00,0x00,0x00,0xE1,
    0x00,0x00,0x00,0x41,0x00,0x00,0x00,0xC9,0x2E,0x0C,0x30,0xC1,0x00,0x00,0x00,0x00]

# in-game
test_sprites = [0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x12,0x1b,0x8,0x5e,0xe1,0x35,0x4,0x69,0xe1,
0x35,0x4,0x67,0xff,0x35,0x4,0x18,0xff,0x0,0x0,0x0,0x0,0x31,0xc,0x51,0x63
]

# intro, guard only
test_sprites = [0x3a,0x28,0xfe,0xc1,0x0,0x0,0x0,0x4f,0x1f,0x8,0xf0,0xc1,0x0,0x0,0x0,0xe1,
0x0,0x0,0x0,0x41,0x0,0x0,0x0,0xc9,0x30,0xc,0x64,0xc1,0x0,0x0,0x0,0x0
]
test_sprites = [0x30,0xc,0x64,0xc1]

for i in range(0,len(test_sprites),4):
    a1,a2,sx,sy = test_sprites[i:i+4]
    sprite_code = (a1 & 0x3F) + 2*(a2 & 0x20)
    sprite_attribute = a2 & 0X1f
    if sprite_code and sprite_attribute and sx < 240:
        print(f"offset ${i:x}: code ${sprite_code:x}, attr ${sprite_attribute:x}, X={sx}, Y={sy}")

        #used_cluts[sprite_code].add(sprite_attribute)
##
##used_cluts = {k:sorted(v) for k,v in sorted(used_cluts.items())}
##with open(rw_json,"w") as f:
##   json.dump(used_cluts,f,indent=2)
